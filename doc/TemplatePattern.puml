@startuml
skinparam BackgroundColor #F8F8F8
skinparam  Shadowing false
skinparam RoundCorner 3
skinparam noteBorderColor Khaki
skinparam noteBackgroundColor #FCF3CF
skinparam noteFontName Courier
skinparam noteFontSite 4

skinparam class {
BackgroundColor white
ArrowColor CornFlowerBlue
BorderColor #C8C8C8
BorderThickness 1.5
HeaderBackgroundColor LightGrey
}

class Client{
  - algorithm:Algorithm
  + operate();
}
abstract class Algorithm{
  + templateMethod()
  + subAlgorithm3()

  + {abstract} subAlgorithm1()
  + {abstract} subAlgorithm2()

}

class ConcreteAlgorithm {
  + subAlgorithm1()
  + subAlgorithm2()
}

class ConcreteAlgorithm2 {
  + subAlgorithm1()
  + subAlgorithm2()
}

Algorithm <|-- ConcreteAlgorithm
Algorithm <|-- ConcreteAlgorithm2
Client o-r-> Algorithm

note right of Algorithm::templateMethod()
   subAlgorithm1();
   subAlgorithm2();
   subAlgorithm3();
end note

note left of Client::operate
   algorithm.templateMethod();
end note
@enduml